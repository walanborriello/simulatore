{% extends 'base.html.twig' %}

{% block title %}Nuovo Studente - Simulatore CFU UniMarconi{% endblock %}

        {% block styles %}
        .form-container {
            max-width: 600px;
            margin: 0 auto;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
            color: #444444;
        }
        
        input, textarea, select {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 1rem;
        }
        
        input:focus, textarea:focus, select:focus {
            outline: none;
            border-color: #379975;
            box-shadow: 0 0 0 2px rgba(55, 153, 117, 0.2);
        }
        
        .required {
            color: #dc3545;
        }
        
        .btn-primary {
            background-color: #379975;
            color: white;
            padding: 12px 24px;
            font-size: 1.1em;
        }
        
        .btn-primary:hover {
            background-color: #2d7a5f;
        }
        
        .btn-secondary {
            background-color: #6c757d;
            color: white;
            padding: 12px 24px;
            font-size: 1.1em;
        }
        
        .btn-secondary:hover {
            background-color: #5a6268;
        }
        
        .form-actions {
            margin-top: 30px;
            text-align: center;
        }
        
        small {
            color: #666;
            font-size: 0.9em;
        }
        
        /* Simulatore Styles */
        .simulator-container {
            margin-top: 40px;
            padding: 30px;
            background: #f8f9fa;
            border-radius: 12px;
            border: 1px solid #e0e0e0;
        }
        
        .simulator-title {
            color: #E57552;
            font-size: 24px;
            font-weight: 600;
            margin-bottom: 20px;
            text-align: center;
        }
        
        .simulator-section {
            margin-bottom: 30px;
        }
        
        .discipline-row {
            display: flex;
            gap: 15px;
            margin-bottom: 15px;
            align-items: end;
        }
        
        .discipline-row .form-group {
            margin-bottom: 0;
        }
        
        .discipline-row .form-group:nth-child(1) { flex: 1; }
        .discipline-row .form-group:nth-child(2) { flex: 1; }
        .discipline-row .form-group:nth-child(3) { flex: 0.5; }
        .discipline-row .form-group:nth-child(4) { flex: 0.3; }
        
        .btn-add-discipline {
            background: #28a745;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
        }
        
        .btn-add-discipline:hover {
            background: #218838;
        }
        
        .btn-remove-discipline {
            background: #dc3545;
            color: white;
            border: none;
            padding: 10px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
        }
        
        .btn-remove-discipline:hover {
            background: #c82333;
        }
        
        .btn-simulate {
            background: #E57552;
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 8px;
            cursor: pointer;
            font-size: 16px;
            font-weight: 600;
            width: 100%;
            margin-top: 20px;
        }
        
        .btn-simulate:hover {
            background: #d65a3f;
        }
        
        .error-message {
            color: #dc3545;
            font-size: 14px;
            margin-top: 5px;
            display: none;
        }
        
        .field-error {
            border-color: #dc3545 !important;
        }
        
                .loading-overlay {
                    position: fixed;
                    top: 0;
                    left: 0;
                    width: 100%;
                    height: 100%;
                    background: rgba(255, 255, 255, 0.95);
                    display: none;
                    justify-content: center;
                    align-items: center;
                    z-index: 9999;
                }
                
                .loading-content {
                    text-align: center;
                }
                
                .loading-spinner {
                    width: 60px;
                    height: 60px;
                    border: 4px solid #f3f3f3;
                    border-top: 4px solid #E57552;
                    border-radius: 50%;
                    animation: spin 1s linear infinite;
                    margin: 0 auto 20px;
                }
                
                @keyframes spin {
                    0% { transform: rotate(0deg); }
                    100% { transform: rotate(360deg); }
                }
                
                .loading-text {
                    color: #E57552;
                    font-size: 16px;
                    font-weight: 500;
                }
                
                /* Forza visibilità search box Select2 */
                .select2-search {
                    display: block !important;
                }
                
                .select2-search__field {
                    width: 100% !important;
                    padding: 8px !important;
                    border: 1px solid #ddd !important;
                    border-radius: 4px !important;
                }
        
        .results-container {
            margin-top: 30px;
            display: none;
        }
        
        .results-table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
            background: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }
        
        .results-table th {
            background: #E57552;
            color: white;
            padding: 12px;
            text-align: left;
            font-weight: 600;
        }
        
        .results-table td {
            padding: 12px;
            border-bottom: 1px solid #f0f0f0;
        }
        
        .results-table tr:nth-child(even) td {
            background-color: #f8f9fa;
        }
        
        .pagination {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin-top: 15px;
        }
        
        .pagination button {
            padding: 8px 12px;
            border: 1px solid #ddd;
            background: white;
            cursor: pointer;
            border-radius: 4px;
        }
        
        .pagination button:hover {
            background: #f8f9fa;
        }
        
        .pagination button.active {
            background: #379975;
            color: white;
            border-color: #379975;
        }
        
        .pagination button:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }
{% endblock %}

{% block content %}
        <h1>Nuovo Studente</h1>
        
        <div class="form-container">
            <form method="POST">
                <div class="form-group">
                    <label for="firstName">Nome <span class="required">*</span></label>
                    <input type="text" id="firstName" name="firstName" required>
                </div>
                
                <div class="form-group">
                    <label for="lastName">Cognome <span class="required">*</span></label>
                    <input type="text" id="lastName" name="lastName" required>
                </div>
                
                <div class="form-group">
                    <label for="email">Email <span class="required">*</span></label>
                    <input type="email" id="email" name="email" required>
                </div>
                
                <div class="form-group">
                    <label for="codiceFiscale">Codice Fiscale <span class="required">*</span></label>
                    <input type="text" id="codiceFiscale" name="codiceFiscale" maxlength="16" required>
                    <small>Inserisci il codice fiscale (16 caratteri)</small>
                </div>
                
                <div class="form-group">
                    <label for="ateneoProvenienza">Ateneo di Provenienza <span class="required">*</span></label>
                    <input type="text" id="ateneoProvenienza" name="ateneoProvenienza" required>
                </div>
                
                <div class="form-group">
                    <label for="corsoStudioInteresse">Corso di Studio di Interesse <span class="required">*</span></label>
                    <input type="text" id="corsoStudioInteresse" name="corsoStudioInteresse" required>
                </div>
                
                <div class="form-group">
                    <label for="phone">Telefono <span class="required">*</span></label>
                    <input type="tel" id="phone" name="phone" required>
                </div>
                
                <div class="form-group">
                    <label for="notes">Note</label>
                    <textarea id="notes" name="notes" rows="4"></textarea>
                </div>
                
                <div class="form-actions">
                    <button type="submit" class="btn btn-primary">Crea Studente</button>
                    <a href="/" class="btn btn-secondary">Annulla</a>
                </div>
            </form>
        </div>
        
        <!-- Simulatore CFU -->
        <div class="simulator-container">
            <h2 class="simulator-title">🎓 Simulatore CFU</h2>
            
            <div class="simulator-section">
                <div class="form-group">
                    <label for="simulator-cdl">Seleziona Corso di Laurea <span class="required">*</span></label>
                    <select id="simulator-cdl" name="simulator-cdl">
                        <option value="">Seleziona corso di laurea...</option>
                    </select>
                    <div class="error-message" id="cdl-error"></div>
                </div>
            </div>
            
            <div class="simulator-section" id="discipline-section" style="display: none;">
                <h3 style="color: #E57552; margin-bottom: 20px;">Discipline Esterne da Riconoscere</h3>
                <div id="discipline-rows">
                    <!-- Le righe delle discipline verranno aggiunte dinamicamente -->
                </div>
                <button type="button" class="btn-add-discipline" id="add-discipline">+ Aggiungi Disciplina</button>
                <button type="button" class="btn-simulate" id="simulate-btn">Calcola Simulazione</button>
            </div>
            
            <!-- Risultati -->
            <div class="results-container" id="results-container">
                <h3 style="color: #E57552; margin-bottom: 20px;">Risultati Simulazione</h3>
                
                <!-- Tabella 1: Dettaglio -->
                <div id="detail-table-container">
                    <h4>Dettaglio Riconoscimenti</h4>
                    <table class="results-table" id="detail-table">
                        <thead>
                            <tr>
                                <th>Disciplina UniMarconi</th>
                                <th>CFU Richiesti</th>
                                <th>Disciplina Esterna</th>
                                <th>CFU Assegnati</th>
                                <th>Priorità</th>
                                <th>Note</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                    <div class="pagination" id="detail-pagination"></div>
                </div>
                
                <!-- Tabella 2: Riepilogo -->
                <div id="summary-table-container">
                    <h4>Riepilogo</h4>
                    <table class="results-table" id="summary-table">
                        <thead>
                            <tr>
                                <th>Disciplina UniMarconi</th>
                                <th>CFU Richiesti</th>
                                <th>CFU Riconosciuti</th>
                                <th>Integrativi Richiesti</th>
                                <th>Stato</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                    <div class="pagination" id="summary-pagination"></div>
                </div>
                
                <!-- Tabella 3: Rimanenze -->
                <div id="leftover-table-container">
                    <h4>Rimanenze</h4>
                    <table class="results-table" id="leftover-table">
                        <thead>
                            <tr>
                                <th>Disciplina Esterna</th>
                                <th>CFU Residui</th>
                                <th>Motivazione</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                    <div class="pagination" id="leftover-pagination"></div>
                </div>
            </div>
        </div>
        
        <!-- Loading Overlay -->
        <div class="loading-overlay" id="loading-overlay">
            <div class="loading-content">
                <div class="loading-spinner"></div>
                <div class="loading-text">Caricamento in corso...</div>
            </div>
        </div>
        
        <script>
            // Variabili globali
            let disciplineCount = 0;
            let currentCdl = '';
            let ssdOptions = [];
            let currentResults = null;
            
            // Inizializzazione
            document.addEventListener('DOMContentLoaded', function() {
                console.log('🚀 Inizializzazione simulatore...');
                console.log('jQuery disponibile:', typeof $ !== 'undefined');
                console.log('Select2 disponibile:', typeof $ !== 'undefined' && $.fn.select2);
                
                if (typeof $ !== 'undefined' && $.fn.select2) {
                    console.log('✅ jQuery e Select2 disponibili, inizializzo...');
                    loadCdlOptions();
                } else {
                    console.log('⚠️ jQuery/Select2 non disponibili, uso fallback...');
                    loadCdlOptionsFallback();
                }
                
                addDisciplineRow(); // Riga 1
                addDisciplineRow(); // Riga 2
                addDisciplineRow(); // Riga 3 - Solo per grafica
                
                // Event listeners
                document.getElementById('simulator-cdl').addEventListener('change', handleCdlChange);
                document.getElementById('add-discipline').addEventListener('click', addDisciplineRow);
                document.getElementById('simulate-btn').addEventListener('click', simulate);
            });
            
            // Carica opzioni CDL (fallback senza Select2)
            async function loadCdlOptionsFallback() {
                try {
                    const response = await fetch('/api/cdl');
                    const cdlData = await response.json();
                    
                    const select = document.getElementById('simulator-cdl');
                    select.innerHTML = '<option value="">Seleziona corso di laurea...</option>';
                    
                    cdlData.forEach(cdl => {
                        const option = document.createElement('option');
                        option.value = cdl.id;
                        option.textContent = cdl.text;
                        select.appendChild(option);
                    });
                    
                    console.log('✅ CDL caricati senza Select2');
                } catch (error) {
                    console.error('❌ Errore caricamento CDL:', error);
                }
            }
            
            // Carica opzioni CDL
            async function loadCdlOptions() {
                try {
                    const response = await fetch('/api/cdl');
                    const cdlData = await response.json();
                    
                    const select = document.getElementById('simulator-cdl');
                    cdlData.forEach(cdl => {
                        const option = document.createElement('option');
                        option.value = cdl.id;
                        option.textContent = cdl.text;
                        select.appendChild(option);
                    });
                    
                    // Distruggi Select2 esistente e ricostruisci
                    console.log('jQuery disponibile:', typeof $ !== 'undefined');
                    console.log('Select2 disponibile:', typeof $ !== 'undefined' && $.fn.select2);
                    
                    if (typeof $ !== 'undefined' && $.fn.select2) {
                        try {
                            $('#simulator-cdl').select2('destroy');
                        } catch(e) {
                            console.log('Select2 non era inizializzato, procedo con creazione');
                        }
                        
                        // Inizializza Select2 con configurazione forzata
                        $('#simulator-cdl').select2({
                            placeholder: 'Seleziona corso di laurea...',
                            allowClear: true,
                            width: '100%',
                            minimumResultsForSearch: 1, // Mostra search box sempre
                            language: {
                                noResults: function() {
                                    return "Nessun risultato trovato";
                                },
                                searching: function() {
                                    return "Ricerca in corso...";
                                }
                            }
                        });
                        
                        // Forza la creazione della search box
                        setTimeout(function() {
                            const searchContainer = $('.select2-search');
                            if (searchContainer.length === 0) {
                                console.log('🔧 Forzando creazione search box...');
                                $('.select2-dropdown').prepend('<div class="select2-search select2-search--dropdown"><input class="select2-search__field" type="search" tabindex="-1" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" role="textbox" aria-autocomplete="list" placeholder="Cerca..."></div>');
                            }
                        }, 100);
                        
                        console.log('✅ Select2 ricostruito per CDL con search box');
                    } else {
                        console.error('❌ jQuery o Select2 non caricati');
                        console.log('jQuery:', typeof $);
                        console.log('Select2:', typeof $ !== 'undefined' ? $.fn.select2 : 'jQuery non disponibile');
                    }
                    
                } catch (error) {
                    console.error('Errore nel caricamento CDL:', error);
                }
            }
            
            // Gestisce cambio CDL
            async function handleCdlChange() {
                const cdlSelect = document.getElementById('simulator-cdl');
                const disciplineSection = document.getElementById('discipline-section');
                
                currentCdl = cdlSelect.value;
                
                if (currentCdl) {
                    disciplineSection.style.display = 'block';
                    showLoading();
                    
                    try {
                        await loadSsdOptions(currentCdl);
                        
                        if (ssdOptions.length === 0) {
                            showNoSsdMessage();
                        } else {
                            hideNoSsdMessage();
                            populateAllSsdSelects();
                        }
                        
                        // Scroll lento verso la sezione discipline
                        disciplineSection.scrollIntoView({ behavior: 'smooth' });
                    } finally {
                        hideLoading();
                    }
                } else {
                    disciplineSection.style.display = 'none';
                }
                
                clearError('cdl-error');
            }
            
            // Carica opzioni SSD per CDL
            async function loadSsdOptions(cdl) {
                try {
                    const response = await fetch(`/api/ssd/${cdl}`);
                    const ssdData = await response.json();
                    ssdOptions = ssdData || [];
                    console.log(`SSD caricati per ${cdl}:`, ssdOptions.length);
                } catch (error) {
                    console.error('Errore nel caricamento SSD:', error);
                    ssdOptions = [];
                }
            }
            
            // Popola tutte le select SSD
            function populateAllSsdSelects() {
                const ssdSelects = document.querySelectorAll('.ssd-select');
                ssdSelects.forEach(select => {
                    populateSsdSelect(select);
                });
            }
            
            // Popola una select SSD
            function populateSsdSelect(select) {
                select.innerHTML = '<option value="">Seleziona SSD...</option>';
                ssdOptions.forEach(ssd => {
                    const option = document.createElement('option');
                    option.value = ssd.id;
                    option.textContent = ssd.text;
                    select.appendChild(option);
                });
                
                // Distruggi Select2 esistente e ricostruisci
                console.log('Inizializzando Select2 per SSD...');
                console.log('jQuery disponibile per SSD:', typeof $ !== 'undefined');
                console.log('Select2 disponibile per SSD:', typeof $ !== 'undefined' && $.fn.select2);
                
                // Prova con Select2, fallback a select normale
                if (typeof $ !== 'undefined' && $.fn.select2) {
                    try {
                        $(select).select2('destroy');
                    } catch(e) {
                        console.log('Select2 SSD non era inizializzato, procedo con creazione');
                    }
                    
                    $(select).select2({
                        placeholder: 'Seleziona SSD...',
                        allowClear: true,
                        width: '100%',
                        minimumResultsForSearch: 1, // Mostra search box sempre
                        language: {
                            noResults: function() {
                                return "Nessun risultato trovato";
                            },
                            searching: function() {
                                return "Ricerca in corso...";
                            }
                        }
                    });
                    
                    // Forza la creazione della search box per SSD
                    setTimeout(function() {
                        const searchContainer = $('.select2-search');
                        if (searchContainer.length === 0) {
                            console.log('🔧 Forzando creazione search box per SSD...');
                            $('.select2-dropdown').prepend('<div class="select2-search select2-search--dropdown"><input class="select2-search__field" type="search" tabindex="-1" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" role="textbox" aria-autocomplete="list" placeholder="Cerca SSD..."></div>');
                        }
                    }, 100);
                    
                    console.log('✅ Select2 ricostruito per SSD con search box');
                } else {
                    console.log('⚠️ Select2 non disponibile, uso select normale per SSD');
                    select.innerHTML = '<option value="">Seleziona SSD...</option>';
                    ssdOptions.forEach(ssd => {
                        const option = document.createElement('option');
                        option.value = ssd.id;
                        option.textContent = ssd.text;
                        select.appendChild(option);
                    });
                }
            }
            
            // Mostra messaggio nessun SSD disponibile
            function showNoSsdMessage() {
                let messageDiv = document.getElementById('no-ssd-message');
                if (!messageDiv) {
                    messageDiv = document.createElement('div');
                    messageDiv.id = 'no-ssd-message';
                    messageDiv.style.cssText = 'background: #fff3cd; border: 1px solid #ffeaa7; color: #856404; padding: 15px; border-radius: 8px; margin: 20px 0; text-align: center;';
                    messageDiv.innerHTML = '⚠️ Non ci sono discipline esterne disponibili per questo corso di laurea.';
                    
                    const disciplineRows = document.getElementById('discipline-rows');
                    disciplineRows.parentNode.insertBefore(messageDiv, disciplineRows);
                }
                messageDiv.style.display = 'block';
                
                // Nasconde le righe delle discipline e i pulsanti
                document.getElementById('discipline-rows').style.display = 'none';
                document.getElementById('add-discipline').style.display = 'none';
                document.getElementById('simulate-btn').style.display = 'none';
            }
            
            // Nasconde messaggio nessun SSD
            function hideNoSsdMessage() {
                const messageDiv = document.getElementById('no-ssd-message');
                if (messageDiv) {
                    messageDiv.style.display = 'none';
                }
                
                // Mostra le righe delle discipline e i pulsanti
                document.getElementById('discipline-rows').style.display = 'block';
                document.getElementById('add-discipline').style.display = 'block';
                document.getElementById('simulate-btn').style.display = 'block';
            }
            
            // Aggiunge riga disciplina
            function addDisciplineRow() {
                disciplineCount++;
                const container = document.getElementById('discipline-rows');
                
                const row = document.createElement('div');
                row.className = 'discipline-row';
                row.id = `discipline-row-${disciplineCount}`;
                
                row.innerHTML = `
                    <div class="form-group">
                        <label>SSD <span class="required">*</span></label>
                        <select class="ssd-select" name="ssd_${disciplineCount}">
                            <option value="">Seleziona SSD...</option>
                        </select>
                        <div class="error-message" id="ssd_${disciplineCount}_error"></div>
                    </div>
                    <div class="form-group">
                        <label>Nome Disciplina <span class="required">*</span></label>
                        <input type="text" name="nome_${disciplineCount}" placeholder="Nome disciplina...">
                        <div class="error-message" id="nome_${disciplineCount}_error"></div>
                    </div>
                    <div class="form-group">
                        <label>CFU <span class="required">*</span></label>
                        <input type="number" name="cfu_${disciplineCount}" min="1" max="30" placeholder="CFU">
                        <div class="error-message" id="cfu_${disciplineCount}_error"></div>
                    </div>
                    <div class="form-group">
                        <button type="button" class="btn-remove-discipline" onclick="removeDisciplineRow(${disciplineCount})">🗑️</button>
                    </div>
                `;
                
                container.appendChild(row);
                
                        // Popola la select SSD se ci sono opzioni disponibili
                        if (ssdOptions.length > 0) {
                            const select = row.querySelector('.ssd-select');
                            populateSsdSelect(select);
                        }
                
                // Event listeners per validazione
                const inputs = row.querySelectorAll('input');
                inputs.forEach(input => {
                    input.addEventListener('focus', () => clearFieldError(input));
                    input.addEventListener('change', () => clearFieldError(input));
                });
                
                // Event listener per select SSD (usando Select2 se disponibile)
                const ssdSelect = row.querySelector('.ssd-select');
                if (ssdSelect) {
                    ssdSelect.addEventListener('focus', () => clearFieldError(ssdSelect));
                    // Usa Select2 change event se disponibile, altrimenti fallback su change standard
                    if (typeof $ !== 'undefined' && $.fn.select2) {
                        $(ssdSelect).on('change', () => clearFieldError(ssdSelect));
                    } else {
                        ssdSelect.addEventListener('change', () => clearFieldError(ssdSelect));
                    }
                }
            }
            
            // Rimuove riga disciplina
            window.removeDisciplineRow = function(id) {
                const row = document.getElementById(`discipline-row-${id}`);
                if (row && disciplineCount > 1) { // Posso eliminare se ce ne sono più di 1
                    row.remove();
                    disciplineCount--; // Decrementa il contatore
                } else if (row && disciplineCount === 1) {
                    // Mostra errore se si prova a eliminare l'ultima riga
                    alert('⚠️ Deve essere presente almeno una disciplina per procedere con la simulazione.');
                }
            }
            
            // Simula
            async function simulate() {
                if (!validateForm()) {
                    return;
                }
                
                showLoading();
                
                try {
                    const data = {
                        cdl: currentCdl,
                        discipline: getDisciplineData()
                    };
                    
                    const response = await fetch('/api/simulate', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(data)
                    });
                    
                    const result = await response.json();
                    
                    if (result.success) {
                        currentResults = result.data;
                        displayResults(result.data);
                    } else {
                        alert('Errore nella simulazione: ' + (result.error || 'Errore sconosciuto'));
                    }
                } catch (error) {
                    console.error('Errore:', error);
                    alert('Errore nella simulazione');
                } finally {
                    hideLoading();
                }
            }
            
            // Valida form
            function validateForm() {
                let isValid = true;
                
                // Valida CDL
                const cdlSelect = document.getElementById('simulator-cdl');
                if (!cdlSelect.value) {
                    showError('cdl-error', 'Seleziona un corso di laurea valido per procedere con la simulazione.');
                    isValid = false;
                }
                
                // Valida discipline
                const rows = document.querySelectorAll('.discipline-row');
                rows.forEach((row, index) => {
                    const ssdSelect = row.querySelector('.ssd-select');
                    const nomeInput = row.querySelector('input[name^="nome_"]');
                    const cfuInput = row.querySelector('input[name^="cfu_"]');
                    
                    if (!ssdSelect.value) {
                        showError(`ssd_${index + 1}_error`, 'Seleziona il settore scientifico disciplinare della materia che hai sostenuto.');
                        isValid = false;
                    }
                    
                    if (!nomeInput.value.trim()) {
                        showError(`nome_${index + 1}_error`, 'Inserisci il nome completo della disciplina che hai sostenuto.');
                        isValid = false;
                    }
                    
                    if (!cfuInput.value || cfuInput.value < 1 || cfuInput.value > 30) {
                        showError(`cfu_${index + 1}_error`, 'Inserisci il numero di crediti formativi universitari (CFU) della disciplina (1-30).');
                        isValid = false;
                    }
                });
                
                // Scroll al primo errore
                if (!isValid) {
                    const firstError = document.querySelector('.field-error, .error-message[style*="block"]');
                    if (firstError) {
                        firstError.scrollIntoView({ behavior: 'smooth' });
                    }
                }
                
                return isValid;
            }
            
            // Ottiene dati discipline
            function getDisciplineData() {
                const data = [];
                const rows = document.querySelectorAll('.discipline-row');
                
                rows.forEach(row => {
                    const ssdSelect = row.querySelector('.ssd-select');
                    const nomeInput = row.querySelector('input[name^="nome_"]');
                    const cfuInput = row.querySelector('input[name^="cfu_"]');
                    
                    if (ssdSelect.value && nomeInput.value && cfuInput.value) {
                        data.push({
                            ssd: ssdSelect.value,
                            nome: nomeInput.value.trim(),
                            cfu: parseInt(cfuInput.value)
                        });
                    }
                });
                
                return data;
            }
            
            // Mostra risultati
            function displayResults(results) {
                const container = document.getElementById('results-container');
                container.style.display = 'block';
                
                displayTable('detail-table', results.detail, 'detail-pagination');
                displayTable('summary-table', results.summary, 'summary-pagination');
                displayTable('leftover-table', results.leftovers, 'leftover-pagination');
                
                container.scrollIntoView({ behavior: 'smooth' });
            }
            
            // Mostra tabella con paginazione
            function displayTable(tableId, data, paginationId, itemsPerPage = 5) {
                const table = document.getElementById(tableId);
                const tbody = table.querySelector('tbody');
                const pagination = document.getElementById(paginationId);
                
                tbody.innerHTML = '';
                pagination.innerHTML = '';
                
                if (data.length === 0) {
                    const row = tbody.insertRow();
                    const cell = row.insertCell();
                    cell.colSpan = table.querySelectorAll('th').length;
                    cell.textContent = 'Nessun dato disponibile';
                    cell.style.textAlign = 'center';
                    return;
                }
                
                const totalPages = Math.ceil(data.length / itemsPerPage);
                let currentPage = 1;
                
                function showPage(page) {
                    tbody.innerHTML = '';
                    const start = (page - 1) * itemsPerPage;
                    const end = start + itemsPerPage;
                    const pageData = data.slice(start, end);
                    
                    pageData.forEach(item => {
                        const row = tbody.insertRow();
                        Object.values(item).forEach(value => {
                            const cell = row.insertCell();
                            cell.textContent = value || '';
                        });
                    });
                    
                    // Aggiorna paginazione
                    pagination.innerHTML = '';
                    for (let i = 1; i <= totalPages; i++) {
                        const button = document.createElement('button');
                        button.textContent = i;
                        button.className = i === page ? 'active' : '';
                        button.addEventListener('click', () => {
                            currentPage = i;
                            showPage(i);
                        });
                        pagination.appendChild(button);
                    }
                }
                
                showPage(1);
            }
            
            // Utility functions
            function showError(elementId, message) {
                const element = document.getElementById(elementId);
                if (element) {
                    element.textContent = message;
                    element.style.display = 'block';
                    
                    // Aggiungi classe error al campo
                    const field = element.previousElementSibling;
                    if (field) {
                        field.classList.add('field-error');
                    }
                }
            }
            
            function clearError(elementId) {
                const element = document.getElementById(elementId);
                if (element) {
                    element.style.display = 'none';
                    element.textContent = '';
                }
            }
            
            function clearFieldError(field) {
                const errorElement = field.parentNode.querySelector('.error-message');
                if (errorElement) {
                    clearError(errorElement.id);
                }
                field.classList.remove('field-error');
            }
            
            function showLoading() {
                document.getElementById('loading-overlay').style.display = 'flex';
            }
            
            function hideLoading() {
                document.getElementById('loading-overlay').style.display = 'none';
            }
        </script>
{% endblock %}